
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'EPS NONTERMS SEPARATOR START TERMS TObuild : START SEPARATOR rulesrules : rule\n           | rules rulerule : NONTERMS TO expr SEPARATORexpr : single\n          | expr singlesingle : term\n            | nonterm\n            | EPSterm : TERMSnonterm : NONTERMS'
    
_lr_action_items = {'START':([0,],[2,]),'$end':([1,4,5,7,16,],[0,-1,-2,-3,-4,]),'SEPARATOR':([2,9,10,11,12,13,14,15,17,],[3,-11,16,-5,-7,-8,-9,-10,-6,]),'NONTERMS':([3,4,5,7,8,9,10,11,12,13,14,15,16,17,],[6,6,-2,-3,9,-11,9,-5,-7,-8,-9,-10,-4,-6,]),'TO':([6,],[8,]),'EPS':([8,9,10,11,12,13,14,15,17,],[14,-11,14,-5,-7,-8,-9,-10,-6,]),'TERMS':([8,9,10,11,12,13,14,15,17,],[15,-11,15,-5,-7,-8,-9,-10,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'build':([0,],[1,]),'rules':([3,],[4,]),'rule':([3,4,],[5,7,]),'expr':([8,],[10,]),'single':([8,10,],[11,17,]),'term':([8,10,],[12,12,]),'nonterm':([8,10,],[13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> build","S'",1,None,None,None),
  ('build -> START SEPARATOR rules','build',3,'p_build','parse.py',61),
  ('rules -> rule','rules',1,'p_rules','parse.py',67),
  ('rules -> rules rule','rules',2,'p_rules','parse.py',68),
  ('rule -> NONTERMS TO expr SEPARATOR','rule',4,'p_rule','parse.py',76),
  ('expr -> single','expr',1,'p_expr','parse.py',82),
  ('expr -> expr single','expr',2,'p_expr','parse.py',83),
  ('single -> term','single',1,'p_single','parse.py',91),
  ('single -> nonterm','single',1,'p_single','parse.py',92),
  ('single -> EPS','single',1,'p_single','parse.py',93),
  ('term -> TERMS','term',1,'p_term','parse.py',100),
  ('nonterm -> NONTERMS','nonterm',1,'p_nonterm','parse.py',105),
]
